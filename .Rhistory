country== "Senegal" ~ "SEN",
country== "Seychelles" ~ "SYC",
country== "Sierra Leone" ~ "SLE",
country== "South Africa" ~ "ZAF",
country== "South Sudan" ~ "SSD",
country== "Swaziland" ~ "SWZ",
country== "Togo" ~ "TGO",
country== "Uganda" ~ "UGA",
country== "United Republic of Tanzania" ~ "TZA",
country== "Tanzania" ~ "TZA",
country== "Western Sahara" ~ "ESH",
country== "Zambia" ~ "ZMB",
country== "Zimbabwe" ~ "ZWE",
country == "None" ~ NA_character_,
TRUE ~ "Others"
)
)
View(metadata_dashboard2)
metadata |> group_by(ISO_3_CODE,country,variant_group)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(variant_group), variant_group != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country, date_of_first_appearance)|> group_by(ISO_3_CODE,country,variant_group)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_first_appearance_variant_per_country.csv"))
metadata |> group_by(ISO_3_CODE,country,region,variant_group)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(variant_group), variant_group != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, variant_group)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_first_appearance_variant_per_country_region.csv"))
metadata |> group_by(ISO_3_CODE,country,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country, date_of_first_appearance)|> group_by(ISO_3_CODE,country, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_first_appearance_lineage_per_country.csv"))
metadata |> group_by(ISO_3_CODE,country,region, pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_first_appearance_lineage_per_country_region.csv"))
pango_surv <- c('B.1.617.2', 'P1', 'C.37','B.1.621','B.1.1.529')
metadata |> group_by(ISO_3_CODE,country,region, pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
filter(pango_lineage %in% pango_surv) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_lineage_SURVEY_country_region.csv"))
pango_surv <- c('B.1.617.2', 'P.1', 'C.37','B.1.621','B.1.1.529')
metadata |> group_by(ISO_3_CODE,country,region, pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
filter(pango_lineage %in% pango_surv) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_lineage_SURVEY_country_region.csv"))
source("libs.R")
docDir  <- "data/input/docx"
xlsxDir <- "data/input/xlsx"
dfnames <- list.files(here("data/input/xlsx"))
fname <- list.files(here("data/input/docx"))[-1]
df <- map(dfnames, ~read_excel(here("data/input/xlsx", .x), sheet = 1))
df <- map(df, clean_names)
df <- map(df, ~mutate(.x, covv_date_test = ymd(covv_date_test),
covv_collection_date = ymd(covv_collection_date)))
df2 <- bind_rows(df)
fname <- list.files(here("data/input/docx"))[-1]
fname <- list.files(here("data/input/docx"))[-1]
library(purrr)
library(docxtractr)
library(tidyverse)
library(here)
library(janitor)
library(readxl)
library(lubridate)
library(tidyr)
library(dplyr)
dfnames <- list.files(here("data/input/xlsx"))
fname <- list.files(here("data/input/docx"))[-1]
df <- map(dfnames, ~read_excel(here("data/input/xlsx", .x), sheet = 1))
df <- map(df, clean_names)
df <- map(df, ~mutate(.x, covv_date_test = ymd(covv_date_test),
covv_collection_date = ymd(covv_collection_date)))
View(df)
# Cleaning the Metadata dataframe from GISAID
library(tidyverse)
library(stringr)
library(spData)
library(janitor)
library(dplyr)
library(lubridate)
setwd("C:/GS Docs/PjtGS/exercise/genomic/R Scripts/genSurv")
# Getting the data
#metada <- vroom::vroom(file.choose())
metadata <- vroom::vroom("data/input/rowdata/metadata.tsv")
# viewing variables names
# viewing variables names
colnames(metadata)
#Computing the number of observations for Africa
sum(str_detect(metadata$Location, "Africa"))
# Remove the whitespace in all character variables
metadata <- metadata |> mutate(across(where(is.character), str_trim, 'both'))
#Getting good names
metadata <- metadata |> janitor::clean_names()
# Seperating the location data into Continent, Countries, Region and Town
metadata <- metadata |> separate(location, sep = ' / ', into = c("continent", "country", "region", "town"))
# Remove the whitespace in all character variables
metadata <- metadata |> mutate(across(where(is.character), str_trim, 'both'))
#Getting good names
metadata <- metadata |> janitor::clean_names() |> mutate(is_reported = 1)
# Getting Variants
metadata <- metadata |> mutate(
variant_group = case_when(
str_detect(pango_lineage, "^B\\.1\\.1\\.7$")~ "VBM Alpha",
str_detect(pango_lineage, "^B\\.1\\.351\\.{0,1}[23]{0,1}$")~"VBM Beta",
str_detect(pango_lineage, "^P\\.1{1}\\.?[A-z0-9]*")~ "VBM Gamma",
str_detect(pango_lineage, "^B\\.1\\.617\\.2$|^AY(\\w|\\W)*")~"VOC Delta",
str_detect(pango_lineage, "^B\\.1\\.621\\.?1?$")~"VBM Mu",
str_detect(pango_lineage,"^C\\.37\\.?1?$")~"VBM Lambda",
str_detect(pango_lineage,"^B\\.1\\.640") ~ "B.1.640",
str_detect(pango_lineage,"^B\\.1\\.620$") ~ "B.1.620",
str_detect(pango_lineage,"^B\\.1\\.1\\.529$") ~ "B.1.1.529",
pango_lineage == "None"~ NA_character_,
TRUE~"Others"
)
)
# Getting ISO_3_CODE
metadata <- metadata |> mutate(
ISO_3_CODE = case_when(
country== "Algeria" ~ "DZA",
country== "Angola" ~ "AGO",
country== "Benin" ~ "BEN",
country== "Botswana" ~ "BWA",
country== "Burkina Faso" ~ "BFA",
country== "Burundi" ~ "BDI",
country== "Côte d'Ivoire" ~ "CIV",
country== "Cameroon" ~ "CMR",
country== "Cape Verde" ~ "CPV",
country== "Cabo Verde" ~ "CPV",
country== "Central African Republic" ~ "CAF",
country== "Chad" ~ "TCD",
country== "Comoros" ~ "COM",
country== "Congo" ~ "COG",
country== "C├┤te d'Ivoire" ~ "CIV",
country== "Cote d'Ivoire" ~ "CIV",
country== "Côte d'Ivoire" ~ "CIV",
country== "Republic of the Congo" ~ "COG",
country== "Equatorial Guinea" ~ "GNQ",
country== "Eritrea" ~ "ERI",
country== "eSwatini" ~ "SWZ",
country== "Eswatini" ~ "SWZ",
country== "Ethiopia" ~ "ETH",
country== "Democratic Republic of the Congo" ~ "COD",
country== "Gabon" ~ "GAB",
country== "Gambia" ~ "GMB",
country== "Ghana" ~ "GHA",
country== "Guinea" ~ "GIN",
country== "Guinea-Bissau" ~ "GNB",
country== "Guinea Bissau" ~ "GNB",
country== "Kenya" ~ "KEN",
country== "Lesotho" ~ "LSO",
country== "Liberia" ~ "LBR",
country== "Madagascar" ~ "MDG",
country== "Malawi" ~ "MWI",
country== "Mali" ~ "MLI",
country== "Mauritania" ~ "MRT",
country== "Mauritius" ~ "MUS",
country== "Mozambique" ~ "MOZ",
country== "Namibia" ~ "NAM",
country== "Niger" ~ "NER",
country== "Nigeria" ~ "NGA",
country== "Rwanda" ~ "RWA",
country== "Sao Tome and Principe" ~ "STP",
country== "Senegal" ~ "SEN",
country== "Seychelles" ~ "SYC",
country== "Sierra Leone" ~ "SLE",
country== "South Africa" ~ "ZAF",
country== "South Sudan" ~ "SSD",
country== "Swaziland" ~ "SWZ",
country== "Togo" ~ "TGO",
country== "Uganda" ~ "UGA",
country== "United Republic of Tanzania" ~ "TZA",
country== "Tanzania" ~ "TZA",
country== "Western Sahara" ~ "ESH",
country== "Zambia" ~ "ZMB",
country== "Zimbabwe" ~ "ZWE",
country == "None" ~ NA_character_,
TRUE ~ "Others"
)
)
northaf <- append(spData::world$name_long[spData::world$subregion %in% c("Northern Africa")][-4], c('Canary Islands', 'Djibouti', 'Mayotte', 'Somalia','Reunion'))
westaf <- append(spData::world$name_long[spData::world$subregion == 'Western Africa'],c("Gambia" ,"Cote d'Ivoire", "Gambia",  "Algeria", "Mauritania", "Guinea-Bissau", "Mauritania", "Cabo Verde") )
eastaf <- c("Tanzania",  "Kenya", "Zimbabwe", "Zambia", "Malawi","Mozambique",  "Madagascar", "Eritrea", "Ethiopia","Uganda", "Rwanda", "South Sudan", "South Africa", "Lesotho", "Botswana", "Namibia", "eSwatini", "Eswatini",'Mauritius','Comoros')
centaf <- c("Democratic Republic of the Congo", "Chad", "Cameroon", "Central African Republic","Republic of the Congo", "Gabon", "Equatorial Guinea", "Angola", "Burundi")
# Removing Arab Countries
metadata <- metadata |> filter(!country %in% northaf) |>
# Creating regions
mutate(
afro_regions = case_when(
country %in% westaf ~ "West Africa",
country %in% centaf ~ "Central Africa",
country %in% eastaf ~ "East South Africa"
),
collection_date = ifelse(nchar(collection_date)<10, as.character(submission_date), collection_date)) |>
mutate(collection_date = ymd(collection_date)) |>
mutate(epi_week = epiweek(collection_date),is_reported = ifelse(is.na(variant_group), 0, 1))  #Replacing poorly recorded dates with submission dates, and adding epiweeks
# Filtering to reduce the metadata to African countries
#metada <- metada |> filter(str_detect(location, "Africa"))
metadata <- metadata |> filter(str_detect(continent, "Africa"))
View(metadata)
metadata |> select(ISO_3_CODE,country,region) |>
arrange(ISO_3_CODE,country,region) |> write_excel_csv(here::here('data','output',"REGIONS.csv"))
metadata |> select(ISO_3_CODE,country,region) |>
zepj
metadata |> unique(ISO_3_CODE,country,region) |>
arrange(ISO_3_CODE,country,region) |> write_excel_csv(here::here('data','output',"REGIONS.csv"))
metadata |> unique(iso_3_code,country,region) |>
arrange(iso_3_code,country,region) |> write_excel_csv(here::here('data','output',"REGIONS.csv"))
View(metadata)
metadata |> distinct(ISO_3_CODE,country,region, .keep_all = F)
metadata |> distinct(ISO_3_CODE,country,region, .keep_all = F) |>
arrange(ISO_3_CODE,country,region) |>
write_excel_csv(here::here('data','output',"REGIONS.csv"))
View(metadata)
northaf <- append(spData::world$name_long[spData::world$subregion %in% c("Northern Africa")][-4], c('Canary Islands', 'Djibouti', 'Mayotte', 'Somalia','Reunion'))
westaf <- append(spData::world$name_long[spData::world$subregion == 'Western Africa'],c("Gambia" ,"Cote d'Ivoire", "Gambia",  "Algeria", "Mauritania", "Guinea-Bissau", "Mauritania", "Cabo Verde") )
eastaf <- c("Tanzania",  "Kenya", "Zimbabwe", "Zambia", "Malawi","Mozambique",  "Madagascar", "Eritrea", "Ethiopia","Uganda", "Rwanda", "South Sudan", "South Africa", "Lesotho", "Botswana", "Namibia", "eSwatini", "Eswatini",'Mauritius','Comoros')
centaf <- c("Democratic Republic of the Congo", "Chad", "Cameroon", "Central African Republic","Republic of the Congo", "Gabon", "Equatorial Guinea", "Angola", "Burundi")
# Removing Arab Countries
metadata <- metadata |> filter(!country %in% northaf) |>
# Creating regions
mutate(
afro_regions = case_when(
country %in% westaf ~ "West Africa",
country %in% centaf ~ "Central Africa",
country %in% eastaf ~ "East South Africa"
),
collection_date = ifelse(nchar(collection_date)<10, as.character(submission_date), collection_date)) |>
mutate(collection_date = ymd(collection_date)) |>
mutate(epi_week = epiweek(collection_date),is_reported = ifelse(is.na(variant_group), 0, 1))  #Replacing poorly recorded dates with submission dates, and adding epiweeks
View(metadata)
metadata |> write_excel_csv(here::here('data','output','Africa',"metadata_africa.csv"))
metadata |> group_by(ISO_3_CODE,country,variant_group)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(variant_group), variant_group != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country, date_of_first_appearance)|> group_by(ISO_3_CODE,country,variant_group)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_Africa_first_appearance_variant_per_country.csv"))
metadata |> group_by(ISO_3_CODE,country,region,variant_group)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(variant_group), variant_group != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, variant_group)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_Africa_first_appearance_variant_per_country_region.csv"))
metadata |> group_by(ISO_3_CODE,country,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country, date_of_first_appearance)|> group_by(ISO_3_CODE,country, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_Africa_first_appearance_lineage_per_country.csv"))
metadata |> group_by(ISO_3_CODE,country,region, pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_Africa_first_appearance_lineage_per_country_region.csv"))
metadata_dashboard <- metadata |> group_by(ISO_3_CODE,country,region,variant_group,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region,variant_group, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region,variant_group,pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_dashboard.csv"))
metadata_dashboard_region <- metadata |> group_by(ISO_3_CODE,country,region,variant_group,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region,variant_group, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region,variant_group,pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_dashboard_region.csv"))
metadata_dashboard_country <- metadata |> group_by(ISO_3_CODE,country,variant_group,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,variant_group, date_of_first_appearance)|> group_by(ISO_3_CODE,country,variant_group,pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_dashboard_country.csv"))
metadata |> group_by(ISO_3_CODE,country,variant_group)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(variant_group), variant_group != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country, date_of_first_appearance)|> group_by(ISO_3_CODE,country,variant_group)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_first_appearance_variant_per_country.csv"))
metadata |> group_by(ISO_3_CODE,country,region,variant_group)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(variant_group), variant_group != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, variant_group)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_first_appearance_variant_per_country_region.csv"))
metadata |> group_by(ISO_3_CODE,country,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country, date_of_first_appearance)|> group_by(ISO_3_CODE,country, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_first_appearance_lineage_per_country.csv"))
metadata |> group_by(ISO_3_CODE,country,region, pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_first_appearance_lineage_per_country_region.csv"))
pango_surv <- c('B.1.617.2', 'P.1.1', 'C.37','B.1.621','B.1.1.529')
metadata |> group_by(ISO_3_CODE,country,region, pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
filter(country %in% westaf) |>
filter(pango_lineage %in% pango_surv) |>
write_excel_csv(here::here('data','output','WAC',"metadata_WAC_lineage_SURVEY_country_region.csv"))
master_tab <- metadata |>
count(iso_3_code,country,variant_group,date_of_first_appearance, sort=T) |>
arrange(iso_3_code,country,variant_group,date_of_first_appearance)
master_tab <- left_join((metadata |> distinct(ISO_3_CODE,country)),
(metadata |> tabyl(ISO_3_CODE,variant_group, sort = T)), by = 'ISO_3_CODE') |>
write_excel_csv(here::here('data','output','Africa',"master_variants.csv"))
# Cleaning the Metadata dataframe from GISAID
library(tidyverse)
library(stringr)
library(spData)
library(janitor)
library(dplyr)
library(lubridate)
setwd("C:/GS Docs/PjtGS/exercise/genomic/R Scripts/genSurv")
# Getting the data
#metada <- vroom::vroom(file.choose())
metadata <- vroom::vroom("data/input/rowdata/metadata.tsv")
# viewing variables names
colnames(metadata)
#Computing the number of observations for Africa
sum(str_detect(metadata$Location, "Africa"))
# Remove the whitespace in all character variables
metadata <- metadata |> mutate(across(where(is.character), str_trim, 'both'))
#Getting good names
metadata <- metadata |> janitor::clean_names()
# Seperating the location data into Continent, Countries, Region and Town
metadata <- metadata |> separate(location, sep = ' / ', into = c("continent", "country", "region", "town"))
# Filtering to reduce the metadata to African countries
#metada <- metada |> filter(str_detect(location, "Africa"))
metadata <- metadata |> filter(str_detect(continent, "Africa"))
# Remove the whitespace in all character variables
metadata <- metadata |> mutate(across(where(is.character), str_trim, 'both'))
#Getting good names
metadata <- metadata |> janitor::clean_names() |> mutate(is_reported = 1)
# Getting Variants
metadata <- metadata |> mutate(
variant_group = case_when(
str_detect(pango_lineage, "^B\\.1\\.1\\.7$")~ "VBM Alpha",
str_detect(pango_lineage, "^B\\.1\\.351\\.{0,1}[23]{0,1}$")~"VBM Beta",
str_detect(pango_lineage, "^P\\.1{1}\\.?[A-z0-9]*")~ "VBM Gamma",
str_detect(pango_lineage, "^B\\.1\\.617\\.2$|^AY(\\w|\\W)*")~"VOC Delta",
str_detect(pango_lineage, "^B\\.1\\.621\\.?1?$")~"VBM Mu",
str_detect(pango_lineage,"^C\\.37\\.?1?$")~"VBM Lambda",
str_detect(pango_lineage,"^B\\.1\\.640") ~ "B.1.640",
str_detect(pango_lineage,"^B\\.1\\.620$") ~ "B.1.620",
str_detect(pango_lineage,"^B\\.1\\.1\\.529$") ~ "B.1.1.529",
pango_lineage == "None"~ NA_character_,
TRUE~"Others"
)
)
# Getting ISO_3_CODE
metadata <- metadata |> mutate(
ISO_3_CODE = case_when(
country== "Algeria" ~ "DZA",
country== "Angola" ~ "AGO",
country== "Benin" ~ "BEN",
country== "Botswana" ~ "BWA",
country== "Burkina Faso" ~ "BFA",
country== "Burundi" ~ "BDI",
country== "Côte d'Ivoire" ~ "CIV",
country== "Cameroon" ~ "CMR",
country== "Cape Verde" ~ "CPV",
country== "Cabo Verde" ~ "CPV",
country== "Central African Republic" ~ "CAF",
country== "Chad" ~ "TCD",
country== "Comoros" ~ "COM",
country== "Congo" ~ "COG",
country== "C├┤te d'Ivoire" ~ "CIV",
country== "Cote d'Ivoire" ~ "CIV",
country== "Côte d'Ivoire" ~ "CIV",
country== "Republic of the Congo" ~ "COG",
country== "Equatorial Guinea" ~ "GNQ",
country== "Eritrea" ~ "ERI",
country== "eSwatini" ~ "SWZ",
country== "Eswatini" ~ "SWZ",
country== "Ethiopia" ~ "ETH",
country== "Democratic Republic of the Congo" ~ "COD",
country== "Gabon" ~ "GAB",
country== "Gambia" ~ "GMB",
country== "Ghana" ~ "GHA",
country== "Guinea" ~ "GIN",
country== "Guinea-Bissau" ~ "GNB",
country== "Guinea Bissau" ~ "GNB",
country== "Kenya" ~ "KEN",
country== "Lesotho" ~ "LSO",
country== "Liberia" ~ "LBR",
country== "Madagascar" ~ "MDG",
country== "Malawi" ~ "MWI",
country== "Mali" ~ "MLI",
country== "Mauritania" ~ "MRT",
country== "Mauritius" ~ "MUS",
country== "Mozambique" ~ "MOZ",
country== "Namibia" ~ "NAM",
country== "Niger" ~ "NER",
country== "Nigeria" ~ "NGA",
country== "Rwanda" ~ "RWA",
country== "Sao Tome and Principe" ~ "STP",
country== "Senegal" ~ "SEN",
country== "Seychelles" ~ "SYC",
country== "Sierra Leone" ~ "SLE",
country== "South Africa" ~ "ZAF",
country== "South Sudan" ~ "SSD",
country== "Swaziland" ~ "SWZ",
country== "Togo" ~ "TGO",
country== "Uganda" ~ "UGA",
country== "United Republic of Tanzania" ~ "TZA",
country== "Tanzania" ~ "TZA",
country== "Western Sahara" ~ "ESH",
country== "Zambia" ~ "ZMB",
country== "Zimbabwe" ~ "ZWE",
country == "None" ~ NA_character_,
TRUE ~ "Others"
)
)
northaf <- append(spData::world$name_long[spData::world$subregion %in% c("Northern Africa")][-4], c('Canary Islands', 'Djibouti', 'Mayotte', 'Somalia','Reunion'))
westaf <- append(spData::world$name_long[spData::world$subregion == 'Western Africa'],c("Gambia" ,"Cote d'Ivoire", "Gambia",  "Algeria", "Mauritania", "Guinea-Bissau", "Mauritania", "Cabo Verde") )
eastaf <- c("Tanzania",  "Kenya", "Zimbabwe", "Zambia", "Malawi","Mozambique",  "Madagascar", "Eritrea", "Ethiopia","Uganda", "Rwanda", "South Sudan", "South Africa", "Lesotho", "Botswana", "Namibia", "eSwatini", "Eswatini",'Mauritius','Comoros')
centaf <- c("Democratic Republic of the Congo", "Chad", "Cameroon", "Central African Republic","Republic of the Congo", "Gabon", "Equatorial Guinea", "Angola", "Burundi")
# Removing Arab Countries
metadata <- metadata |> filter(!country %in% northaf) |>
# Creating regions
mutate(
afro_regions = case_when(
country %in% westaf ~ "West Africa",
country %in% centaf ~ "Central Africa",
country %in% eastaf ~ "East South Africa"
),
collection_date = ifelse(nchar(collection_date)<10, as.character(submission_date), collection_date)) |>
mutate(collection_date = ymd(collection_date)) |>
mutate(epi_week = epiweek(collection_date),is_reported = ifelse(is.na(variant_group), 0, 1))  #Replacing poorly recorded dates with submission dates, and adding epiweeks
metadata |> write_excel_csv(here::here('data','output','Africa',"metadata_africa.csv"))
metadata |> group_by(ISO_3_CODE,country,variant_group)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(variant_group), variant_group != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country, date_of_first_appearance)|> group_by(ISO_3_CODE,country,variant_group)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_Africa_first_appearance_variant_per_country.csv"))
metadata |> group_by(ISO_3_CODE,country,region,variant_group)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(variant_group), variant_group != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, variant_group)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_Africa_first_appearance_variant_per_country_region.csv"))
metadata |> group_by(ISO_3_CODE,country,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country, date_of_first_appearance)|> group_by(ISO_3_CODE,country, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_Africa_first_appearance_lineage_per_country.csv"))
metadata |> group_by(ISO_3_CODE,country,region, pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region, pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_Africa_first_appearance_lineage_per_country_region.csv"))
metadata_dashboard_region <- metadata |> group_by(ISO_3_CODE,country,region,variant_group,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,region,variant_group, date_of_first_appearance)|> group_by(ISO_3_CODE,country,region,variant_group,pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_dashboard_region.csv"))
metadata_dashboard_country <- metadata |> group_by(ISO_3_CODE,country,variant_group,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,variant_group, date_of_first_appearance)|> group_by(ISO_3_CODE,country,variant_group,pango_lineage)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_dashboard_country.csv"))
metadata_dashboard1 <- metadata |> select(-c("region")) |> group_by(ISO_3_CODE,country,variant_group,pango_lineage)|>
summarise(date_of_first_appearance = min(collection_date, na.rm = T), cases = n())|>
filter(!is.na(pango_lineage), pango_lineage != "Others")|> ungroup()|>
arrange(ISO_3_CODE,country,variant_group, date_of_first_appearance)|> group_by(ISO_3_CODE,country,variant_group)|>
filter(date_of_first_appearance == min(date_of_first_appearance)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_dashboard.csv"))
metadata |> filter(variant_group == "VOC Delta", country %in% westaf) |>
mutate(major_lin = fct_lump(pango_lineage, 6)) |>
group_by(country, major_lin)|>
summarise(cases = sum(is_reported)) |>
write_excel_csv(here::here('data','output','Africa',"metadata_TOP_5_lineage.csv"))
metadata |> tabyl(country,variant_group)
View(metadata_dashboard1)
shiny::runApp()
shiny::runApp()
runApp()
